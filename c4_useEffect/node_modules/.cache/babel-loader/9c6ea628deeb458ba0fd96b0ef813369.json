{"ast":null,"code":"var _jsxFileName = \"/Users/bahaygulle/Development/code/In-It-Together/c4_useEffect/src/components/Trivia.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './trivia.css';\nconst API_URL = \"https://opentdb.com/api.php?amount=30&category=17&difficulty=easy\";\n\nconst Trivia = () => {\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    fetch(API_URL).then(resp => resp.json()).then(json => // console.log(json.results) \n    {\n      setState(json.results);\n    });\n  }, []);\n\n  const questions = trivia => {\n    trivia.map(question => {\n      let formattedQuestion = {\n        question: question.question\n      };\n      let answerChoices = [...question.incorrect_answers];\n      formattedQuestion.answer = Math.floor(Math.random() * 3) + 1;\n      answerChoices.splice(formattedQuestion.answer - 1, 0, question.correct_answer);\n      answerChoices.forEach((choice, index) => {\n        formattedQuestion['choice' + (index + 1)] = choice;\n      });\n      return formattedQuestion;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Welcome to Science Quiz!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \" Fun way of learning!  \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" The best trivia application on Science and Nature. \")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, state.map(trivia => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, trivia.question, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, trivia.incorrect_answers.map(incorrectAns => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, incorrectAns)), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, trivia.correct_answer)))));\n};\n\nexport default Trivia;","map":{"version":3,"sources":["/Users/bahaygulle/Development/code/In-It-Together/c4_useEffect/src/components/Trivia.js"],"names":["React","useState","useEffect","Button","Jumbotron","API_URL","Trivia","state","setState","fetch","then","resp","json","results","questions","trivia","map","question","formattedQuestion","answerChoices","incorrect_answers","answer","Math","floor","random","splice","correct_answer","forEach","choice","index","incorrectAns"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,cAAP;AAEA,MAAMC,OAAO,GAAG,mEAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBP,QAAQ,CAAE,EAAF,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAACJ,OAAD,CAAL,CACCK,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IACN;AACA;AACAJ,MAAAA,QAAQ,CAACI,IAAI,CAACC,OAAN,CAAR;AACH,KAND;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC1BA,IAAAA,MAAM,CAACC,GAAP,CAAWC,QAAQ,IAAI;AACnB,UAAIC,iBAAiB,GAAE;AACnBD,QAAAA,QAAQ,EAAEA,QAAQ,CAACA;AADA,OAAvB;AAGA,UAAIE,aAAa,GAAG,CAAE,GAAGF,QAAQ,CAACG,iBAAd,CAApB;AACAF,MAAAA,iBAAiB,CAACG,MAAlB,GAA2BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,IAA8B,CAAzD;AACAL,MAAAA,aAAa,CAACM,MAAd,CACIP,iBAAiB,CAACG,MAAlB,GAA2B,CAD/B,EAEI,CAFJ,EAGIJ,QAAQ,CAACS,cAHb;AAKIP,MAAAA,aAAa,CAACQ,OAAd,CAAsB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrCX,QAAAA,iBAAiB,CAAC,YAAYW,KAAK,GAAG,CAApB,CAAD,CAAjB,GAA4CD,MAA5C;AACH,OAFD;AAGA,aAAOV,iBAAP;AACP,KAfD;AAgBH,GAjBD;;AAmBA,sBACI,uDACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAHJ,CADA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACS,GAAN,CAAUD,MAAM,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,MAAM,CAACE,QAAzB,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAACK,iBAAP,CAAyBJ,GAAzB,CAA6Bc,YAAY,iBACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,YAAJ,CADA,CAAJ,MAFA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIf,MAAM,CAACW,cAAX,CALA,CADH,CADL,CATA,CADJ;AAwBH,CAzDD;;AA2DA,eAAepB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './trivia.css'\n\nconst API_URL = \"https://opentdb.com/api.php?amount=30&category=17&difficulty=easy\"\n\nconst Trivia = () => {\n    const [state, setState ] = useState ([]);\n\n    useEffect(() => {\n        fetch(API_URL)\n        .then(resp => resp.json())\n        .then(json =>\n            // console.log(json.results) \n            {\n            setState(json.results)\n        }\n        )\n    }, []);\n\n    const questions = (trivia) => {\n        trivia.map(question => {\n            let formattedQuestion ={\n                question: question.question\n            };\n            let answerChoices = [ ...question.incorrect_answers];\n            formattedQuestion.answer = Math.floor(Math.random()*3) + 1;\n            answerChoices.splice(\n                formattedQuestion.answer - 1,\n                0,\n                question.correct_answer\n                );\n                answerChoices.forEach((choice, index) => {\n                    formattedQuestion['choice' + (index + 1)] = choice;\n                })\n                return formattedQuestion\n        })\n    }\n\n    return (\n        <>\n        <Jumbotron>\n            <h1>Welcome to Science Quiz!</h1>\n            <p> Fun way of learning!  </p>\n            <p> The best trivia application on Science and Nature. </p> \n        </Jumbotron>\n\n\n        \n        <div>\n            {state.map(trivia => (\n                <div>\n                <p id=\"question\">{trivia.question} </p>\n                <p>{trivia.incorrect_answers.map(incorrectAns => (\n                    <p>{incorrectAns}</p>\n                ))} </p>\n                <p>{trivia.correct_answer}</p>\n                </div>\n            ))}\n        </div>\n        </>\n    )\n\n}\n\nexport default Trivia;\n"]},"metadata":{},"sourceType":"module"}