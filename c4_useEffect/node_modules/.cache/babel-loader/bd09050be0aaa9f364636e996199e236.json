{"ast":null,"code":"var _jsxFileName = \"/Users/bahaygulle/Development/code/In-It-Together/c4_useEffect/src/components/Trivia.js\";\nimport React, { useState, useEffect } from 'react'; // import Button from 'react-bootstrap/Button';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './trivia.css';\nconst API_URL = \"https://opentdb.com/api.php?amount=30&category=17&difficulty=easy\";\n\nconst Trivia = () => {\n  const [loadedQuestions, setLoadedQuestions] = useState([]);\n  useEffect(() => {\n    fetch(API_URL).then(resp => resp.json()).then(json => // console.log(json.results) \n    {\n      setLoadedQuestions(json.results);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Welcome to Science Quiz!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \" Fun way of learning!  \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \" The best trivia application on Science and Nature. \")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, loadedQuestions.map(loadedQuestion => {\n    // let formattedQuestion ={\n    //     question: loadedQuestion.question\n    // };\n    let answerChoices = [...loadedQuestion.incorrect_answers];\n    loadedQuestion.question.answer = Math.floor(Math.random() * 4) + 1;\n    answerChoices.splice(loadedQuestion.question.answer - 1, 0, loadedQuestion.correct_answer);\n    answerChoices.forEach((choice, index) => {\n      loadedQuestion.question['choice' + (index + 1)] = choice;\n    });\n    return loadedQuestion.question;\n  })));\n};\n\nexport default Trivia;","map":{"version":3,"sources":["/Users/bahaygulle/Development/code/In-It-Together/c4_useEffect/src/components/Trivia.js"],"names":["React","useState","useEffect","Jumbotron","API_URL","Trivia","loadedQuestions","setLoadedQuestions","fetch","then","resp","json","results","map","loadedQuestion","answerChoices","incorrect_answers","question","answer","Math","floor","random","splice","correct_answer","forEach","choice","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,cAAP;AAEA,MAAMC,OAAO,GAAG,mEAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAyCN,QAAQ,CAAE,EAAF,CAAvD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACJ,OAAD,CAAL,CACCK,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IACN;AACA;AACAJ,MAAAA,kBAAkB,CAACI,IAAI,CAACC,OAAN,CAAlB;AACH,KAND;AAQH,GATQ,EASN,EATM,CAAT;AAWA,sBACI,uDACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAHJ,CADA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKN,eAAe,CAACO,GAAhB,CAAoBC,cAAc,IAAI;AACvC;AACA;AACA;AACA,QAAIC,aAAa,GAAG,CAAE,GAAGD,cAAc,CAACE,iBAApB,CAApB;AACAF,IAAAA,cAAc,CAACG,QAAf,CAAwBC,MAAxB,GAAiCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,IAA8B,CAA/D;AACAN,IAAAA,aAAa,CAACO,MAAd,CACIR,cAAc,CAACG,QAAf,CAAwBC,MAAxB,GAAiC,CADrC,EAEI,CAFJ,EAGIJ,cAAc,CAACS,cAHnB;AAKIR,IAAAA,aAAa,CAACS,OAAd,CAAsB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrCZ,MAAAA,cAAc,CAACG,QAAf,CAAwB,YAAYS,KAAK,GAAG,CAApB,CAAxB,IAAkDD,MAAlD;AACH,KAFD;AAGA,WAAOX,cAAc,CAACG,QAAtB;AACP,GAfI,CAXL,CAPA,CADJ;AAsCH,CApDD;;AAsDA,eAAeZ,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './trivia.css'\n\nconst API_URL = \"https://opentdb.com/api.php?amount=30&category=17&difficulty=easy\"\n\nconst Trivia = () => {\n    const [loadedQuestions, setLoadedQuestions ] = useState ([]);\n\n    useEffect(() => {\n        fetch(API_URL)\n        .then(resp => resp.json())\n        .then(json =>\n            // console.log(json.results) \n            {\n            setLoadedQuestions(json.results)\n        }\n        )\n    }, []);\n\n    return (\n        <>\n        <Jumbotron>\n            <h1>Welcome to Science Quiz!</h1>\n            <p> Fun way of learning!  </p>\n            <p> The best trivia application on Science and Nature. </p> \n        </Jumbotron>\n\n        <div>\n            {/* {state.map(trivia => (\n                <div>\n                <p id=\"question\">{trivia.question} </p>\n                <p>{trivia.incorrect_answers.map(incorrectAns => (\n                    <p>{incorrectAns}</p>\n                ))} </p>\n                <p>{trivia.correct_answer}</p>\n                </div>\n            ))} */}\n            {/* <p>{questions}</p> */}\n            {loadedQuestions.map(loadedQuestion => {\n            // let formattedQuestion ={\n            //     question: loadedQuestion.question\n            // };\n            let answerChoices = [ ...loadedQuestion.incorrect_answers];\n            loadedQuestion.question.answer = Math.floor(Math.random()*4) + 1;\n            answerChoices.splice(\n                loadedQuestion.question.answer - 1,\n                0,\n                loadedQuestion.correct_answer\n                );\n                answerChoices.forEach((choice, index) => {\n                    loadedQuestion.question['choice' + (index + 1)] = choice;\n                })\n                return loadedQuestion.question;\n        })}\n        </div>\n        </>\n    )\n}\n\nexport default Trivia;\n"]},"metadata":{},"sourceType":"module"}