{"ast":null,"code":"var _jsxFileName = \"/Users/bahaygulle/Development/code/In-It-Together/c4_useEffect/src/components/Trivia.js\";\nimport React, { useState, useEffect } from 'react'; // import Button from 'react-bootstrap/Button';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'; // import './trivia.css'\n\nconst API_URL = \"https://opentdb.com/api.php?amount=30&category=17&difficulty=easy\";\n\nconst Trivia = () => {\n  const [loadedQuestions, setLoadedQuestions] = useState([]);\n  useEffect(() => {\n    fetch(API_URL).then(resp => resp.json()).then(json => // console.log(json.results) \n    {\n      setLoadedQuestions(json.results);\n    });\n  }, []);\n\n  const question = () => {\n    loadedQuestions.map(loadedQuestion => {\n      let formattedQuestion = {\n        question: loadedQuestion.question\n      };\n      let answerChoices = [...loadedQuestion.incorrect_answers];\n      formattedQuestion.answer = Math.floor(Math.random() * 3) + 1;\n      answerChoices.splice(formattedQuestion.answer - 1, 0, loadedQuestion.correct_answer);\n      answerChoices.forEach((choice, index) => {\n        formattedQuestion['choice' + (index + 1)] = choice;\n      });\n      return formattedQuestion;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Welcome to Science Quiz!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \" Fun way of learning!  \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" The best trivia application on Science and Nature. \")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, console.log(question))));\n};\n\nexport default Trivia;","map":{"version":3,"sources":["/Users/bahaygulle/Development/code/In-It-Together/c4_useEffect/src/components/Trivia.js"],"names":["React","useState","useEffect","Jumbotron","API_URL","Trivia","loadedQuestions","setLoadedQuestions","fetch","then","resp","json","results","question","map","loadedQuestion","formattedQuestion","answerChoices","incorrect_answers","answer","Math","floor","random","splice","correct_answer","forEach","choice","index","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,mEAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAyCN,QAAQ,CAAE,EAAF,CAAvD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACJ,OAAD,CAAL,CACCK,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IACN;AACA;AACAJ,MAAAA,kBAAkB,CAACI,IAAI,CAACC,OAAN,CAAlB;AACH,KAND;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,QAAQ,GAAG,MAAM;AACnBP,IAAAA,eAAe,CAACQ,GAAhB,CAAoBC,cAAc,IAAI;AAClC,UAAIC,iBAAiB,GAAE;AACnBH,QAAAA,QAAQ,EAAEE,cAAc,CAACF;AADN,OAAvB;AAGA,UAAII,aAAa,GAAG,CAAE,GAAGF,cAAc,CAACG,iBAApB,CAApB;AACAF,MAAAA,iBAAiB,CAACG,MAAlB,GAA2BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,IAA8B,CAAzD;AACAL,MAAAA,aAAa,CAACM,MAAd,CACIP,iBAAiB,CAACG,MAAlB,GAA2B,CAD/B,EAEI,CAFJ,EAGIJ,cAAc,CAACS,cAHnB;AAKIP,MAAAA,aAAa,CAACQ,OAAd,CAAsB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrCX,QAAAA,iBAAiB,CAAC,YAAYW,KAAK,GAAG,CAApB,CAAD,CAAjB,GAA4CD,MAA5C;AACH,OAFD;AAGA,aAAOV,iBAAP;AACP,KAfD;AAeG,GAhBP;;AAmBA,sBACI,uDACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAHJ,CADA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIY,OAAO,CAACC,GAAR,CAAYhB,QAAZ,CAAJ,CADJ,CAPA,CADJ;AAaH,CA9CD;;AAgDA,eAAeR,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n// import './trivia.css'\n\nconst API_URL = \"https://opentdb.com/api.php?amount=30&category=17&difficulty=easy\"\n\nconst Trivia = () => {\n    const [loadedQuestions, setLoadedQuestions ] = useState ([]);\n\n    useEffect(() => {\n        fetch(API_URL)\n        .then(resp => resp.json())\n        .then(json =>\n            // console.log(json.results) \n            {\n            setLoadedQuestions(json.results)\n        }\n        )\n    }, []);\n\n    const question = () => {\n        loadedQuestions.map(loadedQuestion => {\n            let formattedQuestion ={\n                question: loadedQuestion.question\n            };\n            let answerChoices = [ ...loadedQuestion.incorrect_answers];\n            formattedQuestion.answer = Math.floor(Math.random()*3) + 1;\n            answerChoices.splice(\n                formattedQuestion.answer - 1,\n                0,\n                loadedQuestion.correct_answer\n                );\n                answerChoices.forEach((choice, index) => {\n                    formattedQuestion['choice' + (index + 1)] = choice;\n                })\n                return formattedQuestion\n        })}\n    \n\n    return (\n        <>\n        <Jumbotron>\n            <h1>Welcome to Science Quiz!</h1>\n            <p> Fun way of learning!  </p>\n            <p> The best trivia application on Science and Nature. </p> \n        </Jumbotron>\n\n        <div>\n            <p>{console.log(question)}</p>\n        </div>\n        </>\n    )\n}\n\nexport default Trivia;\n"]},"metadata":{},"sourceType":"module"}